<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    http://www.springframework.org/schema/tx     
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache-4.1.xsd">
    <!--参考:http://www.cnblogs.com/best/p/5648740.html#_label4-->
	  <!--引入属性文件，在配置中占位使用 -->
    <context:property-placeholder location="classpath*:db.properties" />
    <context:property-placeholder location="classpath*:dbpool.properties" />
	<!-- C3P0连接池 -->
     <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		  <property name="driverClass" value="${jdbc.driver}"></property>
		  <property name="jdbcUrl" value="${jdbc.url}"></property>
		  <property name="user" value="${jdbc.uid}"></property>
		  <property name="password" value="${jdbc.pwd}"></property>
		  <property name="minPoolSize"><value>1</value></property>
		  <property name="maxPoolSize"><value>20</value></property>
		  <property name="maxIdleTime"><value>1800</value></property>
		  <property name="acquireIncrement"><value>2</value></property>
		  <property name="maxStatements"><value>0</value></property>
		  <property name="initialPoolSize"><value>2</value></property>
		  <property name="idleConnectionTestPeriod"><value>1800</value></property>
		  <property name="acquireRetryAttempts"><value>30</value></property>
		  <property name="breakAfterAcquireFailure"><value>true</value></property>
		  <property name="testConnectionOnCheckout"><value>false</value></property>
	 </bean>
	 
	<!--会话工厂bean sqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 别名 -->
        <property name="typeAliasesPackage" value="com.zhangguo.bookstore.entities"></property>
        <!-- sql映射文件路径 -->
        <property name="mapperLocations" value="classpath*:pers/fhr/mybatisdemo/mappers/*Mapper.xml"></property>
    </bean>
    
    <!--声明式事务管理 -->
    <!--定义事物管理器，由spring管理事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource"></property>
    </bean>
    <!--支持注解驱动的事务管理，指定事务管理器 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- 扫描包 -->
      <!-- 启用Spring注解 -->
    <context:annotation-config />
    <!-- 扫描注解 将Bean进行注册 -->
     <!-- 根容器中最好只包含服务、仓库和其它业务逻辑，所以在此把Controller过滤掉 -->
    <context:component-scan base-package="pers.fhr.mybatisdemo">
   	 <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
</beans>