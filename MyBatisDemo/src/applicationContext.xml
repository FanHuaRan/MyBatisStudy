<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    http://www.springframework.org/schema/tx     
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache-4.1.xsd">
    
    <!--参考:http://www.cnblogs.com/best/p/5648740.html#_label4-->
    
	  <!--引入属性文件，在配置中占位使用 -->
    <context:property-placeholder location="classpath*:db.properties" />
    
	<!-- 配置C3P0连接池 -->
     <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		  <property name="driverClass" value="${jdbc.driver}"></property>
		  <property name="jdbcUrl" value="${jdbc.url}"></property>
		  <property name="user" value="${jdbc.uid}"></property>
		  <property name="password" value="${jdbc.pwd}"></property>
		  <property name="minPoolSize" value="${c3p0.minPoolSize}"></property>
		  <property name="maxPoolSize" value="${c3p0.maxPoolSize}"></property>
		  <property name="maxIdleTime" value="${c3p0.maxIdleTime}"></property>
		  <property name="acquireIncrement" value="${c3p0.acquireIncrement}"></property>
		  <property name="maxStatements" value="${c3p0.maxStatements}"></property>
		  <property name="initialPoolSize" value="${c3p0.initialPoolSize}"></property>
		  <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"></property>
		  <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"></property>
		  <property name="breakAfterAcquireFailure" value="${c3p0.breakAfterAcquireFailure}"></property>
		  <property name="testConnectionOnCheckout" value="${c3p0.testConnectionOnCheckout}"></property>
	 </bean>
	 
	<!--会话工厂bean sqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 为实体类配置别名包，以后使用实体类，就不需要加上全限定名 -->
        <property name="typeAliasesPackage" value="pers.fhr.mybatisdemo.models"></property>
        <!-- sql映射文件路径 -->
        <property name="mapperLocations" value="classpath*:pers/fhr/mybatisdemo/mappers/*Mapper.xml"></property>
    </bean>
    
     <!--自动扫描对象关系映射 也就是根据dao接口和映射文件实现我们的dao -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定会话工厂，如果当前上下文中只定义了一个则该属性可省去 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!-- 指定要自动扫描接口的基础包，实现接口  并注册bean-->
        <property name="basePackage" value="pers.fhr.mybatisdemo.daos"></property>
    </bean>
    
    <!--声明式事务管理 -->
    <!--定义事物管理器，由spring管理事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    
    <!--支持注解驱动的事务管理，指定事务管理器 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- 扫描包 -->
      <!-- 启用Spring注解 -->
    <context:annotation-config />
    <!-- 扫描注解 将注解Bean进行注册 -->
    <context:component-scan base-package="pers.fhr.mybatisdemo">
   	 <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
</beans>